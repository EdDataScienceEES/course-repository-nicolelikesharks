2=2
2+2
# Coding Club Workshop 1 - R Basics
# Learning how to import and explore data, and make graphs about Edinburgh's biodiversity
# Written by Gergana Daskalova 06/11/2016 University of Edinburgh
plot(cars)
plot(cars)
plot(cars)
plot(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(comment = '', fig.width = 6, fig.height = 6
))
plot(pressure)
plot(pressure)
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(comment = '', fig.width = 6, fig.height = 10
))
knitr::opts_chunk$set(comment = '', fig.width = 6, fig.height = 10
))
knitr::opts_chunk$set(comment = '', fig.width = 6, fig.height = 10)
knitr::opts_chunk$set(comment = '', fig.width = 6, fig.height = 100)
knitr::opts_chunk$set(comment = '', fig.width = 6, fig.height = 100)
knitr::opts_chunk$set(comment = '', fig.width = 6, fig.height = 10)
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
```{r, setup, include=FALSE}
knitr::opts_chunk$set(comment = '', fig.width = 6, fig.height = 10)
```
*italic*
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
```{r, setup, include=FALSE}
knitr::opts_chunk$set(comment = '', fig.width = 6, fig.height = 10)
```
*italic*
_italic_
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
```{r, setup, include=FALSE}
knitr::opts_chunk$set(comment = '', fig.width = 6, fig.height = 10)
```
*italic*
_italic_
"*trying*"
source('~/Data Science Course/Week 2 Tutorial/code etiquette tutorial.R', echo=TRUE)
source('~/Data Science Course/Week 2 Tutorial/code etiquette tutorial.R', echo=TRUE)
source('~/Data Science Course/Week 2 Tutorial/code etiquette tutorial.R', echo=TRUE)
install.packages("formatR")
setwd(C:/Users/nicol/Documents/Data Science Course/Week 2 Tutorial/bad script)
setwd("C:/Users/nicol/Documents/Data Science Course/Week 2 Tutorial/bad script")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Data <- read.csv("C:/Users/nicol/Documents/Data Science Course/Week 2 Tutorial/bad script/LPIdata_CC.csv")
install.packages("RCurl")
View(LPI)
setwd("C:/Users/nicol/Documents/Data Science Course/Week 2 Tutorial/bad script")
# Introduction----
# Tidying up Bad_Script.R
# Nicole Yap s1761850@ed.ac.uk
# 07-10-2020
# Libraries----
library(tidyr)
library(readr)
library(dplyr)
library(ggplot2)
library(RCurl)
# Setting Working Directory----
setwd("C:/Users/nicol/Documents/Data Science Course/Week 2 Tutorial/bad script")
# Setting theme for ggplot2----
ThemeForLPI <- function() {
theme_bw() +
theme(axis.text.x = element_text(size = 12, angle = 45, vjust = 1, hjust = 1),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14, face = "plain"),
axis.title.y = element_text(size = 14,
face = "plain"), panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), units = , "cm"),
plot.title = element_text(size = 20, vjust = 1, hjust = 0.5),
legend.text = element_text(size = 12, face = "italic"),
legend.title = element_blank(),
legend.position = c(0.9, 0.9))
}
# Import data from .csv----
LPI <- read.csv("LPIdata_CC.csv")
#Tidying script----
# Abundance records in one column
LPI_column <- gather(LPI, "year", "abundance", 9:53)
# Convert years to numeric
LPI_column$year <- parse_number(LPI_column$year)
# Making names lowercase
names(LPI_column)
names(LPI_column) <- tolower(names(LPI_column))
# Convert abundance to numeric
LPI_column$abundance <- as.numeric(LPI_column$abundance)
# Pipelines
lpiBiomes <- LPI_column %>%
group_by(biome) %>%
summarise(Pop. = n())
lpiBiomes[1:5, 1:2]
#lpiBiomes[1:5, 1:2]
head(LPI_biome_summ)
View(lpiBiomes)
type = "bar"
plot <- ggplot(LPI_column, aes(biome, color = biome)) + {
if (type == "bar") geom_bar() else geom_point(stat = "count")
} +
LPI.theme() +
ylab("Number of populations") +
xlab("Biome") +
theme(legend.position = "none")
LPI.theme <- function() {
theme_bw() +
theme(axis.text.x = element_text(size = 12, angle = 45, vjust = 1, hjust = 1),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14, face = "plain"),
axis.title.y = element_text(size = 14,
face = "plain"), panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), units = , "cm"),
plot.title = element_text(size = 20, vjust = 1, hjust = 0.5),
legend.text = element_text(size = 12, face = "italic"),
legend.title = element_blank(),
legend.position = c(0.9, 0.9))
}
type = "bar"
plot <- ggplot(LPI_column, aes(biome, color = biome)) + {
if (type == "bar") geom_bar() else geom_point(stat = "count")
} +
LPI.theme() +
ylab("Number of populations") +
xlab("Biome") +
theme(legend.position = "none")
source('~/Data Science Course/Week 2 Tutorial/bad script/good_script.R', echo=TRUE)
source('~/Data Science Course/Week 2 Tutorial/bad script/good_script.R', echo=TRUE)
source('~/Data Science Course/Week 2 Tutorial/bad script/good_script.R', echo=TRUE)
# tbh don't know what this is for should probs delete it but shrugs
levels(LPI_column$biome)
# tbh don't know what this is for should probs delete it but shrugs
levels(LPI_column$biome)
levels(LPI_column$biome)
source('~/Data Science Course/Week 2 Tutorial/bad script/good_script.R', echo=TRUE)
source('~/Data Science Course/Week 2 Tutorial/bad script/good_script.R', echo=TRUE)
